
// Solar application related
Group gPump			(gStatus)
Group gHeatingMedium	(All)
Group gTuning			
Group gSolarStat
Group gRuntime
Group gSolarTrend
Group gSunPosition	(gStatus)
Group gDischarge	(gTuning)
Group gDHW				(All)

// Temperature sensors
Number CollectorTemp	"Collector [%.1f °C]"	<temperature>	(gStatus, gRuntime, gSolarTrend)		{mqtt="<[cloud-mqtt:brodok/solar/collector_temp:state:default]"}
// Either from DHW boiler or from Heat exchanger
Number ReturnTemp		"Return	[%.1f °C]"		<temperature>	(gStatus, gRuntime, gSolarTrend)		{mqtt="<[cloud-mqtt:brodok/solar/return_temp:state:default]"}
//Number OutsideTemp		"Ambient temperature [%.1f °C]"		<temperature>	(gStatus, gWeather)		{weather="locationId=home, type=temperature, property=current"}
// Remember latest return temperature when solar pump was on @see PumpLastOperation
Number	LatestDhwReturnTemp	"DHW Temperature [%.1f °C]"	<temperature>	(gStatus)	{mqtt="<[cloud-mqtt:brodok/solar/temp/dhw:state:default]"}

// Other Inputs
Switch 	DHW_Request		"DHW request"		(gStatus) // not in use
// During a Heating season it's worth to use collector for underfloor heating
Switch	HeatingSupportSw	"Heating support"	(gStatus, gRuntime)
// Trigger collector overheating protection when family is away
Switch	HolidayModeSw		"Holiday mode"		(gStatus, gTuning)
// Weather prediction
Switch	RainyTomorrow		"Rain showers forecast"	(gWeather) //not used
Switch	SunnyTomorrow		"Sunny afternoon [%s]"	(gWeather)
Switch 	DischargeDHWRequest	"Discharge DHW request"	(gStatus, gDischarge)	{mqtt="<[cloud-mqtt:brodok/solar/dhw/discharge:command:REGEX((on|off))]"}
// Collector is in shadow
Switch CollectorInShadow	"Collector in shadow"	(gStatus, gRuntime, gSunPosition)
// Manual or AUTO operating mode
Switch ManualOperation	"Manual operation"	(gStatus, gRuntime)
// Solar irradiation sensor on collector's surface
Number SolarRadiation	"Radiation on collector [%.1f Volt]"	(gStatus, gRuntime)
// Sun position
// azimuth and elevation
Number   SunAzimuth        "Azimuth [%.0f °]"   (gSunPosition)  {astro="planet=sun, type=position, property=azimuth"}
Number   SunElevation      "Sun elevation [%.1f °]" (gSunPosition)  {astro="planet=sun, type=position, property=elevation"}
Number	SunbeamAngleToFacade	"Sun beam angle to facade [%.0f °]" (gSunPosition)


// Solar Pump 
Switch SolarPumpSw	"Solar Pump"		(gPump, gRuntime, RelaysGPIO)	{gpio="pin:23 activelow:yes"} // Relay #4
// solar pump status for chart
Number PumpStatusON	"Solar pump status"	(gSolarTrend) // 0 - off, 5 - on
Number PumpOperationAnnualHr	"Annual operating hours [%d h]"		(gPump)
Number PumpOperationThisMonthHr	"Current month operation [%d h]"	(gPump)
Number PumpOperationTodayHr		"Today [%.2f h]"					(gPump, gSolarStat)
Number TotalPumpOperatingHr		"Total pump operation [%.2f h]"		(gPump, gSolarStat)
// timestamp when the pump was ON last time
DateTime	PumpLatestOperation	"Latest operation [%1$tA,  %1$tH:%1$tM]"	(gPump)

// DHW items
Switch DhwRelaySw	"DHW relay"		(gDHW, gRuntime, RelaysGPIO)	{gpio="pin:17"} // Relay #1
Number DhwHeaterON	"DHW heater status"	(gDHW, gSolarTrend) // -10 - off, -5 - on
Number DhwHeaterPower "DHW power [%.1f kW]" (gDHW) // ~1500-1700 W (8A * 190-220V)
Number DhwDemandFactor "DHW demand factor [%.1f]" (gTuning, gDHW) // +/-20%
// Demand is different each month. winter: 10 kwh/24h, summer: 6.5 kwh/24h
Number	DhwDailyDemand	"DHW daily demand [%.1f kWh]"	(gStatus, gDHW)
// request command to enable electric heater/DHW relay logic
String 	DhwTriggerRequest	"DHW heater request [%s]"	(gDHW, gStatus)
//Number DHWWeekendFactor "Weekend factor [%.1f]" (gTuning, gDHW) // +20% at weekend
// bath request switch ??

// Heating medium
Number pHeatingCapacity	"Heating Capacity [%.0f J/(kg*K)]"	(gHeatingMedium)
Number pGlycolPercent	"Glycol content [%.0f %%]"			(gHeatingMedium)
Number pFlowRate		"Estimated flow [%.1f l/h]"		(gHeatingMedium)	{mqtt="<[cloud-mqtt:brodok/solar/tuning/flowRate:state:default]"}
String pGlycolFlowModelPolynom "Flow vs. t return [%s]" (gHeatignMedium)	{mqtt="<[cloud-mqtt:brodok/solar/tuning/flowModel:state:default]"}
Number pFlowModelA (gHeatignMedium)
Number pFlowModelB (gHeatignMedium)
Number pFlowModelC (gHeatignMedium)
Number pSystemVolume	"System volume [%d ltr]"			(gHeatingMedium)
Number pSolarFluidType	"Solar fluid"	(gHeatingMedium)
String SolarFluid	"Solar fluid [%s]" // water or glycol
Number pKwhChart	"KWH Chart" // key for UI switch

// Security tokens, API keys, etc.
Group gSecurity
String pThingSpeakApiKeySolar	"Solar channel Key [%s]"	(gSecurity)
String pThingSpeakApiKeyHeating	"Heating channel Key [%s]"	(gSecurity)
String pOwmApiKey	"OWM API Key [%s]"	(gSecurity)
String pOwmCityId	"OWM City ID [%s]"	(gSecurity)

// Tuning parameters
Number	tnDeltaTon	"Delta T on [%.1f °C]"		(gTuning) // 8K (5 - 10K)
Number	tnDeltaToff	"Delta T off [%.1f °C]"	(gTuning) // 2K
Number	tnTminHeatingSupport	"Min. Temperature [%d °C]"	(gTuning)
Number tnLowPassAlpha "Low pass filter alpha [%.2f]"	(gTuning)	{mqtt="<[cloud-mqtt:brodok/solar/tuning/lowPassAlpha:state:default]"}
Number tnRiseTCollector	"Collector ROC [%.1f °C/min]" (gTuning)

// DHW storage protection
Number tnDischargeKwhMin "Discharge amount [%.1f kWh]"	(gDischarge)	{mqtt="<[cloud-mqtt:brodok/solar/tuning/discharge/kwh:state:default]"}
//Number tnDischargeHrMin	"Min. duration [%.1f h]"	(gTuning)	{mqtt="<[cloud-mqtt:brodok/solar/tuning/discharge/hr:state:default]"}
// When this TReturn temperature is achieved - DHW Discharge request is toggled
Number tnDhwDischargeTReturn "T Return above [%.0f °C]"	(gDischarge)
Number tnDischargePowerMin	"Power below [%.0f W]"	(gDischarge)

// Overheating protection
Number tnOverheatingTmax	"Max. T Return [%.0f °C]" (gTuning)
Number tnOverheatingTmin	"Min. T Collector [%.0f °C]" (gTuning)

// ICE protection
Number tnIceProtectionTMin	"Min. T [%.1f °C]"	(gTuning)
Number tnGlycolProtectionTMin	"Glycol min. T [%.1f °C]"	(gTuning)
Switch tnIceProtectionEnabled	"Enable protection" (gTuning)

// Collected Energy from Solar thermal collector
Number	kwhToday	"Today [%.2f kWh]" (gSolarStat)
Number	kwhThisMonth	"This month [%.2f kWh]" (gSolarStat)
Number	DhwChargeToday	"DHW solar supply today [%d %%]"	(gSolarStat)



// Runtime values
Number	rtCollectorPower	"Estimated collector power	[%d Watt]"	(gRuntime)
Number	rtDeltaT			"Current temperature drop [%.1f °C]"		(gRuntime)
Number	rtFiltDeltaT	"Delta T (filt.) [%.2f °C]"	(gRuntime, gSolarTrend)
Number	rtFlow			"Flow virt. analyzer [%.2f l/h]" (gRuntime, gSolarTrend)
Number	rtPowerDensity	"Удельная мощность [%.1f W/°C]"	(gRuntime)
String	rtControllerStatus	"Controller state [%s]"	(gRuntime)
// water consumption event
Switch	rtDHWConsumptionEvent	"DHW draw-off event"	(gRuntime)
Number	rtCollTder	"Collector T ROC [%.2f °C/min]"	(gRuntime)

// Weather conditions tomorrow
// clouds
Number   Clouds   "Clouds [%.0f %%]" (gWeather)  //{weather="locationId=home, forecast=1, type=clouds, property=percent"}

// condition
String   Condition        "Condition [%s]"   (gWeather)   //{weather="locationId=home, forecast=1, type=condition, property=text"}
Number   Condition_ID     "Condition id [%d]"  (gWeather) //{weather="locationId=home, forecast=1, type=condition, property=id"}
