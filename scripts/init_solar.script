/*
 * Initialize default parameter values here.
 * 
 */

logInfo("startup", "initializing solar controller parameters...")

postUpdate(tnDeltaTon, 10)
postUpdate(tnDeltaToff, 2.5)
postUpdate(tnLowPassAlpha, 0.3)
postUpdate(tnRiseTCollector, 0.3) //deg/minute
postUpdate(tnTminHeatingSupport, 22)

postUpdate(DHW_Request, ON)
postUpdate(HeatingSupportSw, OFF)
postUpdate(LatestDhwReturnTemp, 40)
postUpdate(DhwHeaterPower, 1.6) // 1600W

postUpdate(pSystemVolume, 6)
// glycol flow virt. analyzer model
sendCommand(pFlowModelA, -0.0194)
sendCommand(pFlowModelB, 1.9006)
sendCommand(pFlowModelC, 15.1169)
sendCommand(pSolarFluidType, 1) // glycol

postUpdate(pFlowRate, 52) // l/h

postUpdate(DischargeDHWRequest, OFF)
postUpdate(HolidayModeSw, ON)

postUpdate(kwhToday, 0)
postUpdate(kwhThisMonth, 0)
postUpdate(PumpOperationTodayHr, 0)

postUpdate(SunnyTomorrow, ON)
// discharge options
postUpdate(tnDischargeKwhMin, 2.0)
postUpdate(tnDhwDischargeTReturn, 65)
postUpdate(tnDischargePowerMin, 100)

//frost protection
postUpdate(tnIceProtectionTMin, 2.0)
postUpdate(tnIceProtectionEnabled, ON)

//Overheating protection
postUpdate(tnOverheatingTmax, 85)
postUpdate(tnOverheatingTmin, 60)


sendCommand(SolarPumpSw, OFF)
sendCommand(ManualOperation, OFF)
sendCommand(rtControllerStatus, "IDLE")
